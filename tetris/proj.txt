// переписать check_lines
var field_width = 10;
var field_height = 12;
var frame_height = 1198;
var frame_width = 1000;
var cell_height = 99;
var cell_width = 99;
var game_status = 0;
var cell_amount = 120;
var fig_color = "#55f";
var body_color = "aaa";
var fixed_color = "222";
var field = [];
var score = 0;
var round_num = 0;
var figure_type = 0;
var figure_pos = 1;
var figure = [];
var next_figure = [];
var next_figure_type = 1;
var prev_figure = [];
var rounds = [];
var move_speed = 1000;
var line = 0;
var c = 1;
var window_cells = 16;

function main()
{
	
	change_body();
	
	create_field();
	make_start_button();
	
	make_score();
	
	make_window();
	
}

function change_body()
{
	document.body.style.background = body_color;
	document.body.onkeydown = user_action;
}


function make_score()
{
	elem = document.createElement("div");
	elem.id = "score";
	elem.style.width = "200px";
	elem.style.height = "50px";
	elem.style.padding = "10px";
	elem.style.position = "absolute";
	elem.style.marginLeft = "1200px";
	elem.style.marginTop = "-1100px";
	elem.style.fontSize = "3em";
	elem.innerText = "Score " + score;
	elem.style.border = "5px solid black";
	elem.style.background = "white";
	document.body.appendChild(elem);
}

function make_window()
{
	elem = document.createElement("div");
	elem.id = "window";
	elem.style.width = "363px";
	elem.style.height = "362px";
	elem.style.position = "absolute";
	elem.style.marginLeft = "1200px";
	elem.style.marginTop = "-900px";
	elem.style.border = "4px solid black";
	elem.style.background = "white";
	document.body.appendChild(elem);
	
	for(var i = 0; i < window_cells; i++)
	{
		
		cell = document.createElement("div");
		cell.id = "w" + parseInt(i + 1);
		cell.style.display = "inline";
		cell.style.width = cell_width - 10;
		cell.style.height = cell_height - 10;
		cell.style.border = "1px solid black";
		elem.appendChild(cell);
	}
}
function create_field()
{

	frame = document.createElement("div");
	frame.style.display = "block";
	frame.style.width = frame_width;
	frame.style.height = frame_height;
	frame.style.background = "white";
	frame.style.border = "5px solid black";
	frame.id = "frame";
	document.body.appendChild(frame);
	
	for(var i = 0 ; i < cell_amount; i++)
	{
		field.push(0);
		cell = document.createElement("div");
		cell.id = i + 1;
		cell.style.display = "inline";
		cell.style.width = cell_width;
		cell.style.height = cell_height;
		cell.style.border = "1px solid black";
		frame.appendChild(cell);
	}	

}
function make_start_button()
{
	start = document.createElement("div");
	start.style.display = "block";
	start.style.position = "absolute";
	start.innerText = "New game";
	start.onmousedown = new_game;
	start.style.width = "200px";
	start.style.height = "50px";
	start.style.padding = "5px 0 5px 20px";
	start.style.marginLeft = "1200px";
	start.style.border = "4px solid blue";
	start.style.background = "white";
	start.style.fontSize = "2.2em";
	start.style.marginTop = "-100px";
	document.body.appendChild(start);
}

function new_game()
{
	for(var i = 0; i < cell_amount; i++)
	{
		field[i] = 0;
		cell = document.getElementById(i  + 1);
		cell.style.background = "white";
	}
	
	new_round();
	
}

function new_round()
{

	round_num += 1;
	var d = new Date();
	var temp_figure_type = Math.ceil(Math.random() * 10) *(d % 13)% 7;
	if(round_num == 1)
	{
		var nextd = new Date();
		next_figure_type = Math.ceil(Math.random() * 10) *17*(nextd % 19)% 7;	
		figure_type = temp_figure_type;
	}
	else
	{
		figure_type = next_figure_type;
		next_figure_type = temp_figure_type;
	}
	display_next();
	figure_pos = 1;
	//figure_type = 4;
	if(figure_type == 0)
	{
		figure = [-15, -14, -5, -4];
	}
	else if(figure_type == 1)
		figure = [-35,-25,-15,-5];
	else if(figure_type == 2)
		figure = [-24,-14,-15,-5];
	else if(figure_type == 3)
		figure = [-25,-14,-15,-4];
	else if(figure_type == 4)
		figure = [-15,-4,-3,-5];
	else if(figure_type == 5)
		figure = [-5,-4,-3,-13];
	else if(figure_type == 6)
		figure = [-5,-4,-3,-14];
	game_status = 1;
	play_round();
}

function display_next()
{
	for(var i = 0; i < window_cells; i++)
	{
		elem = document.getElementById("w" + (parseInt(i + 1)));
		elem.style.background = "white";
	}
	var idlist = [];
	if(next_figure_type == 0)
	{
		idlist = ["w6","w7","w10","w11"];
	}
	else if(next_figure_type == 1)
		idlist = ["w2","w6","w10","w14"];
	else if(next_figure_type == 2)
		idlist = ["w3","w6","w7","w10"];
	else if(next_figure_type == 3)
		idlist = ["w2","w6","w7","w11"];
	else if(next_figure_type == 4)
		idlist = ["w2","w6","w7","w8"];
	else if(next_figure_type == 5)
		idlist = ["w7","w3","w5","w6"];
	else if(next_figure_type == 6)
		idlist = ["w5","w2","w7","w6"];
	for(var i in idlist)
	{
		elem = document.getElementById(idlist[i]);
		elem.style.background = fig_color;
	}
}
function turn_figure()
{
	
	if(game_status == 1)
	{
		var minval = 130;
		var maxval = -10;
		for(var i = 0; i < figure.length; i++)
		{
			if(figure[i] > maxval)
				maxval = figure[i];
			if(figure[i] < minval)
				minval = figure[i];
		}
		var c1 = minval + 100;
		var x = c1 % 10;
		var nz = (c1  % 10 != 0);
		var u0r1 = nz && (field[minval] != 2);
		var u0r2 = nz && (c1  % 10< 9) && (field[minval + 1] != 2);
		var u0r3 = nz && (c1  % 10 < 8) && (field[minval + 2] != 2);
		var u0l1 = ( !nz || c1 % 10 > 1) && (field[minval - 2] != 2);
		var u0l2 = ( !nz || c1 % 10 > 2) && (field[minval - 3] != 2);
		var u0l3 = ( !nz || c1 % 10 > 3) && (field[minval - 4] != 2);
		var d1l0 = (minval + 10 <= cell_amount) && (field[minval - 1 + field_width] != 2); 
		var d1l1 = (minval + 10 <= cell_amount) && (!nz || (c1%10 > 1)) &&(field[minval - 1 + 9] != 2);
		var d1l2 = (minval + 10 <= cell_amount) && (!nz || (c1 % 10 > 2)) && (field[minval + 7] != 2);
		var d1r1 = (minval + 10 <= cell_amount) && nz && (field[minval + 10] != 2);
		var d2l0 = (minval + 20 <= cell_amount) && (field[minval - 1 + 2*field_width] != 2); 
		var d3l0 = (minval + 30 <= cell_amount) && (field[minval - 1 + 3*field_width] != 2); 
		var u1r0 = (minval > 10) && (field[minval - 11] != 2);
		var u2r0 = (minval > 20) && (field[minval - 21] != 2);
		var u3r0 = (minval > 30) && (field[minval - 31] != 2);
		var d1r2 = (minval +10 <= cell_amount) && nz && (c1 % 10 < 9) && (field[minval +11]!=2);
		var u1r1 = nz && (minval < 11 || (minval > 10 && (field[minval - 10] != 2)));
		var d2r1 = (minval + 20 <= cell_amount) && nz && (field[minval + 20] != 2);
		var d2l1 = (minval + 20 <= cell_amount) && (!nz || (c1 % 10 > 1)) && (field[minval + 18] != 2);
		var d2r2 = (minval + 20 <= cell_amount) && nz &&(c1 % 10 < 9) && (field[minval + 21] != 2);
		var u1l1 =  (!nz || (c1%10 > 1)) && (minval < 12 || (minval > 11 && (field[minval - 12] != 2)));
		
		if(figure_type == 1)
		{
			if(figure_pos == 1)
			{
				if(c1 % 10 < 8 && nz)
				{
					if(u0r1 && u0r2 && u0r3)
					{
						prev_figure = [];
						for(var i = 0; i < figure.length; i++)
						{
							prev_figure.push(figure[i]);
							figure[i] = minval + i;
						}
						display_figure();
						figure_pos = 2;
					}
					
				}
				else
				{
					if(u0l1 && u0l2 && u0l3)
					{
						prev_figure = [];
						for(var i = 0; i < figure.length; i++)
						{
							prev_figure.push(figure[i]);
							figure[i] = minval - i;
						}
						display_figure();
						figure_pos = 2;
					}
					
				}
				
			}
			else if(figure_pos == 2)
			{
				if(d1l0 && d2l0 && d3l0)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						figure[i] = minval + i * 10;
					}
					display_figure();
					figure_pos = 1;
				}
				
				else if(u1r0 && u2r0 && u3r0)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						figure[i] = minval - i * 10;
					}
					display_figure();
					figure_pos = 1;
				}
				
			}
		}
		else if(figure_type == 2)
		{
			if(figure_pos == 1)
			{
				if(d2l0 && d2r1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval)
						{
							figure[i] = minval + 20;
						}
						else if(figure[i] == maxval)
							figure[i] = figure[i] + 2;
					}
					display_figure();
					figure_pos = 2;
				}
				else if(d2l0 && d1l2)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval)
						{
							figure[i] = minval + 20;
						}
						else if(figure[i] == minval + 10)
							figure[i] = minval + 8;
					}
					display_figure();
					figure_pos = 2;
				}
			}
			else if(figure_pos == 2)
			{
				if(u1r1 && d1l0)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == maxval - 1)
						{
							figure[i] = minval + 10;
						}
						else if(figure[i] == maxval)
							figure[i] = figure[i] - 21;
					}
					display_figure();
					figure_pos = 1;
				}
			}
		}
		else if(figure_type == 3)
		{
			if(figure_pos == 1)
			{
				if(d1r2 && d2l0)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval)
						{
							figure[i] = minval + 20;
						}
						else if(figure[i] == minval + 10)
							figure[i] = figure[i] + 2;
					}
					display_figure();
					figure_pos = 2;
				}
				else if(d2l0 && d2l1 )
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval)
						{
							figure[i] = minval + 20;
						}
						else if(figure[i] == maxval)
							figure[i] = maxval - 2;
					}
					display_figure();
					figure_pos = 2;
				}

			}
			else if(figure_pos == 2)
			{
				if(u1l1 && u0l1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval + 1)
						{
							figure[i] = minval - 1;
						}
						else if(figure[i] == maxval - 1)
							figure[i] = maxval - 21;
					}
					display_figure();
					figure_pos = 1;
				}
			}
		}
		else if(figure_type == 4)
		{
			if(figure_pos == 1)
			{
				if(u0r1 && d2l0)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == maxval - 1)
						{
							figure[i] = minval + 1;
						}
						else if(figure[i] == maxval)
							figure[i] = minval + 20;
					}
					display_figure();
					figure_pos = 2;
				}
			}
			else if(figure_pos == 2)
			{
				if(u0r2 && d1r2)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == maxval - 10 || (figure[i] == maxval))
						{
							figure[i] = figure[i] - 8;
						}
						
					}
					display_figure();
					figure_pos = 3;
				}
				else if(u0l1 && d1r1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == maxval - 10)
						{
							figure[i] = figure[i] +1;
						}
						else if(figure[i] == maxval)
							figure[i] = maxval - 21;
					}
					display_figure();
					figure_pos = 3;
				}
				
			}
			else if(figure_pos == 3)
			{
				if(d2r1 && d2r2)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval || (figure[i] == minval + 1))
						{
							figure[i] = figure[i] + 21;
						}
						
					}
					display_figure();
					figure_pos = 4;
				}
			}
			else if(figure_pos == 4)
			{
				if(u0l2 && d1l2 && d1l1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == maxval || (figure[i] == maxval - 1))
						{
							figure[i] = figure[i] - 11;
						}
						else if(figure[i] == minval)
						{
							figure[i] = minval - 2;
						}
						
					}
					display_figure();
					figure_pos = 1;
				}
				else if(u0l1 && d1l1&&d1r1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == maxval)
						{
							figure[i] = figure[i] - 9;
						}
						else if(figure[i] == minval)
						{
							figure[i] = minval - 1;
						}
						else if(figure[i] == maxval - 1)
							figure[i] = maxval - 11;
						
					}
					display_figure();
					figure_pos = 1;
				}
			}
		}
		else if(figure_type == 5)
		{
			if(figure_pos == 1)
			{
				if(u0l1 && d2l1 && d2l0)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval)
						{
							figure[i] = minval - 1;
						}
						else if(figure[i] == maxval)
						{
							figure[i] = maxval + 10;
						}
						else if(figure[i] == maxval - 2)
						{
							figure[i] = maxval + 9;
						}
					}
					display_figure();
					figure_pos = 2;
				}
			}
			else if(figure_pos == 2)
			{
				if(u0l1 && u0r1 && d1l1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval + 10 || (figure[i] == maxval - 1))
						{
							figure[i] = figure[i] - 11;
						}
						else if(figure[i] == maxval)
						{
							figure[i] = maxval - 20;
						}
					}
					display_figure();
					figure_pos = 3;
				}
				else if( u0r1 && u0r2)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == maxval - 1 || figure[i] == maxval)
						{
							figure[i] = figure[i] - 19;
						}
						
					}
					display_figure();
					figure_pos = 3;
				}
			}
			else if(figure_pos == 3)
			{
				if(d1r1&& d2r1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval + 2 )
						{
							figure[i] = minval + 21;
						}
						else if(figure[i] == maxval)
						{
							figure[i] = maxval + 1;
						}
					}
					display_figure();
					figure_pos = 4;
				}
			}
			else if(figure_pos == 4)
			{
				if(u0r2 && d1l0 && d1r2)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval )
						{
							figure[i] = minval + 10;
						}
						else if(figure[i] == minval + 1)
						{
							figure[i] = minval + 2;
						}
						else if(figure[i] == maxval)
						{
							figure[i] = maxval - 9;
						}
					}
					display_figure();
					figure_pos = 1;
				}
				else if(d1l1 && d1l2)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval )
						{
							figure[i] = minval + 10;
						}
						else if(figure[i] == maxval)
						{
							figure[i] = maxval - 12;
						}
					}
					display_figure();
					figure_pos = 1;
				}
			
			}
		}
		else if(figure_type == 6)
		{
			if(figure_pos == 1)
			{
				if(d2l0)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == maxval - 2)
						{
							figure[i] = minval + 20;
						}
					}
					display_figure();
					figure_pos = 2;
				}
			}
			else if(figure_pos == 2)
			{
				if(d1l1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval )
						{
							figure[i] = minval + 9;
						}
					}
					display_figure();
					figure_pos = 3;
				}
				else if(d1r2 && d2r1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval )
						{
							figure[i] = minval + 12;
						}
						else if(figure[i] == maxval )
						{
							figure[i] = maxval + 1;
						}
					}
					display_figure();
					figure_pos = 3;
				}
			}
			else if(figure_pos == 3)
			{
				if(u1r1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == minval +2 )
						{
							figure[i] = minval - 9;
						}
					}
					display_figure();
					figure_pos = 4;
				}
			}
			else if(figure_pos == 4)
			{
				if(d1r1)
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == maxval )
						{
							figure[i] = maxval - 9;
						}
					}
					display_figure();
					figure_pos = 1;
				}
				else if(u0l1 && d1l2) 
				{
					prev_figure = [];
					for(var i = 0; i < figure.length; i++)
					{
						prev_figure.push(figure[i]);
						if(figure[i] == maxval )
						{
							figure[i] = maxval - 12;
						}
						if(figure[i] == minval )
						{
							figure[i] = minval - 1;
						}
					}
					display_figure();
					figure_pos = 1;
				}
			}
			
		}
		
	}
	
}
function play_round()
{
	display_figure();
	prev_figure = [];
	clearInterval(c);
	if( game_status == 1)
	{
		c = setInterval(move_figure_down, move_speed);
	}

	
}

function display_figure()
{
	for(var i = 0; i < prev_figure.length; i++)
	{
		if(prev_figure[i] > 0)
		{
			elem = document.getElementById(prev_figure[i]);
			elem.style.background = "white";
			field[prev_figure[i] - 1] = 0;
		}
	}
	for(var i = 0; i < figure.length; i++)
	{
		if(figure[i] > 0)
		{
			elem = document.getElementById(figure[i]);
			elem.style.background = fig_color;
			field[figure[i] - 1] = 1;
		}
	}
}
//реализовать возможность поворота, перемещения влево вправо, вниз 

function move_figure_down()
{
	if(game_status == 1)
	{
		
		//alert(1);
		var maxval = 0;
		var negval = 0;
		var cflag = 0;
		for(var i = 0; i < figure.length; i++)
		{
			if(figure[i] <= 0)
				negval = 1;
			if(field[figure[i] - 1 + 10] == 2 || figure[i] +field_width > cell_amount)
				cflag = 1;
		}
		if(cflag)
		{
			if(negval)
			{
				for(var i = 0; i < figure.length; i++)
				{
					if(figure[i] > 0)
					{
						elem = document.getElementById(figure[i]);
						elem.style.background = fixed_color;
						field[figure[i] - 1] = 2;
					}
				}
				game_status = 0;
				alert("You lose. Your score: " + score); 
			}
			else
			{
				var maxval = -100;
				var minval = 130;
				for(var i = 0; i < figure.length; i++)
				{
					elem = document.getElementById(figure[i]);
					elem.style.background = fixed_color;
					field[figure[i] - 1] = 2;
					if(figure[i] > maxval)
						maxval = figure[i];
					if(figure[i] < minval)
						minval = figure[i];
				}
			
				game_status = 2;
				//alert([maxval,minval]);
				/*
				sst = "[";
				for(var i in field)
				{
				
					sst = sst + (parseInt(i)+1)+  ":" + field[i]+", ";
				}
				alert(sst+"]   "+ "maxval: "+ maxval);
				*/
				
				//var tmaxv = maxval;
				maxval = 119;
				for(var p = 0; p < 4; p++)
				{
					var tmaxv = maxval;
					var tscore = score;
					for(var i = 0; i < Math.round((maxval - minval) / 10,0) + 1; i++)
					{	//alert(Math.round((maxval - minval) / 10,0) + 1);
						check_lines(tmaxv);
						if(tscore == score)
						{
							tmaxv -= 10;
						}	
					}
				}
				figure = [];
				prev_figure = [];
				new_round();
			}
		}
		else
		{
			prev_figure = [];
			for(var i = 0; i < figure.length; i++)
			{
				prev_figure.push(figure[i]);
				figure[i] = figure[i] + field_width;
			}
			display_figure();
		}
	}
	

}

function display_field()
{
	for(var i = 0; i < cell_amount; i++)
	{
		elem = document.getElementById(i + 1);
		if(field[i] == 2)
			elem.style.background = fixed_color;
		else
			elem.style.background = "white";
	}
}
function check_lines(maxval)
{

		//alert("maxval: "+ maxval);
		var flag = 1;
		
		for(var i = 0; i < field_width; i++)
		{
			var ind = maxval - maxval % 10 + i;
			if(maxval % 10 == 0)
				ind = maxval - 10 + i;
			if(field[ind] != 2)
				flag = 0;
		}
		if(flag)
		{
			//alert("flag");
			score += 10;
			elem = document.getElementById("score");
			elem.innerText = "Score " + score;
			var copymax = maxval;
			
			while(copymax > 0)
			{
				
				for(var i = 0; i < field_width; i++)
				{
					//alert(copymax);
					var ind = copymax - copymax % 10 + i;
					if(copymax % 10 == 0)
						ind = copymax - 10 + i;
					if(copymax > field_width)
					{
						field[ind] = field[ ind - field_width];
						//alert("inner scope");
					}
					else
						field[ ind] = 0;

				}
				//alert(field+"abra");
				copymax -= field_width;
			}
		}
		
	display_field();
}

function move_figure_left()
{
	if(game_status == 1)
	{
		var flag = 0;
		for(var i = 0; i < figure.length; i++)
		{
			if((figure[i]+100) % 10 == 1 || field[figure[i]-2] == 2)
				flag = 1;
		}
		if(flag == 0)
		{
			prev_figure = [];
			for(var i = 0; i < figure.length; i++)
			{
				prev_figure.push(figure[i]);
				figure[i] = figure[i] - 1;
			}
			display_figure();
		}
	}
}

function move_figure_right()
{
	if(game_status == 1)
	{
		var flag = 0;
		for(var i = 0; i < figure.length; i++)
		{
			if((figure[i]+100) % 10 == 0 || field[figure[i]] == 2)
				flag = 1;
		}
		if(flag == 0)
		{
			prev_figure = [];
			for(var i = 0; i < figure.length; i++)
			{
				prev_figure.push(figure[i]);
				figure[i] = figure[i] + 1;
			}
			display_figure();
		}
	}
}


function user_action()
{
	
	if(event.keyCode == 32)
	{
		if(game_status == 1)
			game_status = 2;
		else if (game_status == 2)
			game_status = 1;
	}
	else if(game_status == 1)
	{
		if(event.keyCode == 40)
			move_figure_down();
		else if(event.keyCode == 37)
			move_figure_left();
		else if(event.keyCode == 39)
			move_figure_right();
		else if(event.keyCode == 38)
			turn_figure();
	}
	
	//alert(event.keyCode); 37 39 40
}

